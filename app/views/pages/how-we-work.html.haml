#heading
  %h1.what-is
    Capability with technology
    %br/
    to deliver software
    %br/
    effectively &amp; efficiently
  %h2
    Providing 
    %span.impt-c2 design &amp; development
    services
    %br/ 
    for 
    %span.impt-rails Ruby on Rails 
    web applications.
#section
  %h3
    Our Transparent Work Culture
  %p Communication is always open &amp; you're connected to our team while we work.
  %p Approachability, flexibility and openness are our main strengths. We value our business ethics and maintain transparency with the way we work. Our core strength is our team.
  %h3 Customer collaboration over contract negotiation
  %p We believe that software cannot be ordered like a commodity. Countless attempts to treat software projects in this manner have failed. Sometimes the failures are spectacular.
  %p Successful projects for us involve regular and frequent customer feedback. Rather than depending upon a contract, or a statement of work, our clients works closely with our development team, providing frequent feedback and this fosters more of a collaboration effort that benefits the project. This atmosphere keeps the project in full swing.
  %h3 Responding to change over following a plan
  %p We understand the ability to respond to change often determines the success or failure of a software project. When we lay out plans, we need to make sure that our plans are flexible and quite ready to adapt to changes in the business and with technology.
  %p The development cycle of a software project cannot be predicted far into the future. There are too many variables to account for. It is simply difficult to estimate accurately the cost of a large project with every detail. The business environment that the software must serve is likely to change during the course of development. It is difficult to write reliable requirements. Customers are likely to alter the requirements once they see the system start to function.
  %p We believe a better planning strategy is to make detailed plans for the next few weeks, very rough plans for the next few months, and extremely crude plans beyond that. We usually know the tasks we will be working on for the next few weeks. Then, we roughly know the requirements we will be working on for the next few months. And we should have a only a vague idea what the system will do after a year.
  %p This decreasing resolution of the planning method means that we are only investing in a detailed plan for those tasks that are immediate. While on the contrary, if a detailed plan is made, it is hard to change since the team will have a lot of momentum and commitment invested. But since that plan only governs a few weeks worth of time the rest of the plan remains flexible. The lower resolution parts of the plan can be changed with relative ease.
  %p Here at Code by 2, our professional goal is to deliver the highest possible value to our clients while being agile and to focus on simple techniques for reaching the client's goals.
